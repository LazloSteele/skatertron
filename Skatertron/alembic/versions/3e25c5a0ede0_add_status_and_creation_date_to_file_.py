"""Add status and creation date to file table

Revision ID: 3e25c5a0ede0
Revises: c9502521e560
Create Date: 2025-01-13 17:49:40.235941

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import enum

# revision identifiers, used by Alembic.
revision: str = '3e25c5a0ede0'
down_revision: Union[str, None] = 'c9502521e560'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


class FootageExceptions(enum.Enum):
    SCRATCH = 'scratch'
    NO_VIDEO = 'no video'
    NO_PHOTO = 'no photo'
    MULTIPLE_VIDEOS = 'multiple videos'


footage_exceptions_enum = sa.Enum(FootageExceptions, name="footage_exceptions_enum")


def upgrade() -> None:
    footage_exceptions_enum.create(op.get_bind(), checkfirst=True)

    op.add_column(
        'files',
        sa.Column(
            'creation_time',
            sa.DateTime(),
            nullable=False,
            server_default=sa.text('CURRENT_TIMESTAMP')
        )
    )

    op.add_column(
        'events',
        sa.Column(
            'event_rink',
            sa.String(length=25),
            nullable=False,
            server_default='Rink 1'
        )
    )

    op.add_column(
        'events',
        sa.Column(
            'event_position',
            sa.Integer(),
            nullable=True,
            unique=True
        )
    )

    op.add_column(
        'skates',
        sa.Column(
            'footage_exceptions',
            footage_exceptions_enum,
            nullable=True
        )
    )

    op.add_column(
        'skates',
        sa.Column(
            'skate_position',
            sa.Integer(),
            nullable=True,
            unique=True
        )
    )

    connection = op.get_bind()
    result = connection.execute(
        sa.text(
            "SELECT id FROM events ORDER BY id"
        )
    )
    rows = result.fetchall()

    for idx, row in enumerate(rows):
        connection.execute(
            sa.text("UPDATE events SET event_position = :value WHERE id = :id"),
            {"value": idx, "id": row[0]}
        )

    result = connection.execute(
        sa.text(
            "SELECT id FROM skates ORDER BY id"
        )
    )
    rows = result.fetchall()

    for idx, row in enumerate(rows):
        connection.execute(
            sa.text("UPDATE skates SET skate_position = :value WHERE id = :id"),
            {"value": idx, "id": row[0]}
        )

    op.alter_column(
        'events',
        'event_position',
        nullable=False
    )

    op.alter_column(
        'skates',
        'skate_position',
        nullable=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        'files',
        'file_type',
        existing_type=sa.VARCHAR(),
        nullable=True
    )

    op.alter_column(
        'files',
        'file_path',
        existing_type=sa.VARCHAR(),
        nullable=True
    )
    # ### end Alembic commands ###
